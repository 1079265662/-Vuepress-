(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{611:function(s,t,e){"use strict";e.r(t);var n=e(2),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("介绍")]),s._v(" "),e("p",[s._v("利用axios transform功能 解决文章id超范围问题"),e("br")])]),s._v(" "),e("h2",{attrs:{id:"文章id超范围问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文章id超范围问题"}},[s._v("#")]),s._v(" 文章id超范围问题")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/sidorares/json-bigint",target:"_blank",rel:"noopener noreferrer"}},[s._v("处理超范围id插件"),e("OutboundLink")],1)]),s._v(" "),e("blockquote",[e("p",[s._v("问题: js处理数字有长度限制 如果后端传来的数据太长 js无法处理 导致无法把修改后的数据交给后端处理")]),s._v(" "),e("p",[s._v("解决: 安装插件 npm i json-bigint")]),s._v(" "),e("p",[s._v("类型: 会把 超范围的id 转换为对象拼接起来 并非之前字符串 所以调用时候 需要用 "),e("code",[s._v("toString()")]),s._v("转换成字符串")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jinyanlong-1305883696.cos.ap-hongkong.myqcloud.com/YKC2j6HSOGcQNZX.png",alt:"image-20210610132529317"}})]),s._v(" "),e("blockquote",[e("p",[s._v("在通用的接口调用模块设置  "),e("code",[s._v("utils文件夹 里面 request.js")])])]),s._v(" "),e("ul",[e("li",[s._v("设置"),e("code",[s._v("transformResponse")]),s._v(" 在传递给 then/catch 前，允许修改响应数据(比响应式拦截更早)")]),s._v(" "),e("li",[e("code",[s._v("transformResponse")]),s._v(" 携带服务器传来的数据 不携带其他内容 响应式拦截会携带其他内容")])]),s._v(" "),e("div",{staticClass:"language-diff extra-class"},[e("pre",{pre:!0,attrs:{class:"language-diff"}},[e("code",[s._v("// 导入bigint插件\nimport JSONbig from 'json-bigint'\n// ~  声明一个通用的url基础地址 用于申请token的基础路径 用常量保存\nconst baseURL = 'http://api-toutiao-web.itheima.net/app/'\n// ~  axios分支的方法 创建axios接口调用方法 取代单一的axios方法(方便单独设置)\nconst instance = axios.create({\n"),e("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("   // 在接口获取数据之前对后端返回的原始数据进行处理\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("   // 这里处理发生在响应拦截器之前（它最先接触到后端返回的原始数据）\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("   transformResponse: [(data) => {\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("     // 这里对数据处理好之后，再交给响应拦截器即可\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("     try {\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 转换的id值 是一个对象 注意后续: 需要转换为字符串格式 对象不属于任何字符串格式\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("       return JSONbig.parse(data) // parse是对文章列表的id值 进行转换 解决js数值最大限制问题\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("     } catch {\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 如果数据转换错误，就不做转换，返回原始数据\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("       return data\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v("     }\n")]),e("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v(" }],\n")])]),e("span",{pre:!0,attrs:{class:"token unchanged"}},[e("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v(" // ~ baseURL是axios属性 用来声明url基础路径\n")]),e("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),e("span",{pre:!0,attrs:{class:"token line"}},[s._v(" baseURL: baseURL\n")])]),s._v("})\n")])])]),e("blockquote",[e("p",[s._v("如果用完有Vue警告 :")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2021/06/10/ZGrsb2gnAhqJOk9.png",alt:"1623308642(1)"}})]),s._v(" "),e("p",[s._v("原因: 插件会自动把长id转换为 对象 拼接起来 但是"),e("code",[s._v(":key")]),s._v(" 要求的是对象 所以会警告")]),s._v(" "),e("p",[s._v("解决: 需要用 "),e("code",[s._v("toString()")]),s._v("转换成字符串 即可")]),s._v(" "),e("ul",[e("li",[e("code",[s._v(':key="item.art_id.toString()"')])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);