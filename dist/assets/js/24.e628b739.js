(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{546:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("介绍")]),s._v(" "),a("p",[s._v("JS的es6 es7的一些经典新特性 "),a("br")])]),s._v(" "),a("h2",{attrs:{id:"属性名和属性值-赋值es6规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性名和属性值-赋值es6规则"}},[s._v("#")]),s._v(" 属性名和属性值 赋值es6规则")]),s._v(" "),a("ul",[a("li",[s._v("如果属性名 属性值 两者名称一致 可以简写一个名")])]),s._v(" "),a("blockquote",[a("p",[s._v("属性名属性值一致 赋值 老方法")])]),s._v(" "),a("p",[s._v("属性名 : 属性值00000")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("info "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" info\n")])])]),a("blockquote",[a("p",[s._v("es6规则 可以简写成一个")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("info  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性名 和 导入的熟悉值名称一样 可以省略一个")]),s._v("\n")])])]),a("h2",{attrs:{id:"键值对-es6规则-vue-methods-es6函数方法声明-规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键值对-es6规则-vue-methods-es6函数方法声明-规则"}},[s._v("#")]),s._v(" 键值对 es6规则 (Vue "),a("code",[s._v("methods")]),s._v(" es6函数方法声明)规则")]),s._v(" "),a("ul",[a("li",[s._v("es6提供了 函数方法声明的简写 更方便使用函数方法声明")])]),s._v(" "),a("blockquote",[a("p",[s._v("对象函数方法键值对 老写法")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("方法名")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("es6键值对函数方法新写法")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//省去了function")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("方法名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"vue-methods-es6函数方法声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-methods-es6函数方法声明"}},[s._v("#")]),s._v(" Vue "),a("code",[s._v("methods")]),s._v(" es6函数方法声明")]),s._v(" "),a("blockquote",[a("p",[s._v("老方法的 "),a("code",[s._v("methods:")]),s._v("函数方法声明 "),a("code",[s._v("async")]),s._v(" 函数方法")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("方法名")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("es6 的"),a("code",[s._v("methods:")]),s._v("函数方法声明 "),a("code",[s._v("async")]),s._v(" 函数方法")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//省去了 : 和 function")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("方法名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"es6的动态属性名-键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6的动态属性名-键"}},[s._v("#")]),s._v(" es6的动态属性名(键)")]),s._v(" "),a("ul",[a("li",[s._v("es6支持动态绑定属性名(键) 可以通过三元表达式 来动态切换属性名(键)")])]),s._v(" "),a("blockquote",[a("p",[s._v("演示案例")])]),s._v(" "),a("ul",[a("li",[s._v("直接用字符串 绑定动态属性名\n"),a("ul",[a("li",[s._v("通过字符串绑定的动态属性名 就是直接命名")])])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个 控制动态属性名的状态位")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建三元表达式 动态切换属性名 (字符串直接动态绑定属性名)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'msg'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'info'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'动态属性名字符串直接绑定'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[s._v("通过变量方式 绑定动态属性名\n"),a("ul",[a("li",[s._v("通过变量绑定的动态属性名 变量里的内容 才是真正的属性名")])])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个 控制动态属性名的状态位")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建动态绑定属性名的变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mag'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" info "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'info'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建三元表达式 动态切换属性名 (通过对象方式 绑定对象内容为属性名)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'动态属性名字符串直接绑定'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);